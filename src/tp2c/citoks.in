% Turing+ v6.2, Sept 2022
% Copyright 1986 University of Toronto, 2022 Queen's University at Kingston
% 
% Permission is hereby granted, free of charge, to any person obtaining a copy of this software
% and associated documentation files (the “Software”), to deal in the Software without restriction,
% including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
% and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
% subject to the following conditions:
%
% The above copyright notice and this permission notice shall be included in all copies
% or substantial portions of the Software.
%
% THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
% INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
% AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
% DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

const tokenNames : array FirstToken..LastToken of string(23) :=
    init("aIdent",		/* aIdent */
	"aPredefinedId",	/* aPredefinedId */
	"aIntegerLit",		/* aIntegerLit */
	"aStringLit",		/* aStringLit */
	"aCharLit",		/* aCharLit */
	"aRealLit",		/* aRealLit */
	"aDataDescriptor",	/* aDataDescriptor */
	"aRoutineIndex",	/* aRoutineIndex */
	"aIdentText",		/* aIdentText */
	"aStabInformation",	/* aStabInformation */
	"aEndSubstring",	/* aEndSubstring */
	"aConstInit",		/* aConstInit */
	"aThen",		/* aThen */
	"aProcessInit",		/* aProcessInit */
	"aRoot",		/* aRoot */
	"aNoOp",		/* aNoOp */
	"aComma",		/* aComma */
	"aTempAssign",		/* aTempAssign */
	"#18",
	"#19",
	"aAdd",			/* aAdd */
	"aAddressint",		/* aAddressint */
	"aAbs",			/* aAbs */
	"aAliasCheck",		/* aAliasCheck */
	"aAll",			/* aAll */
	"aAllocate",		/* aAllocate */
	"aAnd",			/* aAnd */
	"aAndEqual",		/* aAndEqual */
	"aArray",		/* aArray */
	"aAsm",			/* aAsm */
	"aAssert",		/* aAssert */
	"aAssign",		/* aAssign */
	"aAssignInverted",	/* aAssignInverted */
	"aAt",			/* aAt */
	"aBegin",		/* aBegin */
	"aBeginAsm",		/* aBeginAsm */
	"aBind",		/* aBind */
	"aBits",		/* aBits */
	"aBody",		/* aBody */
	"aBoolean",		/* aBoolean */
	"aBooleanAndEqual",	/* aBooleanAndEqual */
	"aBooleanOrEqual",	/* aBooleanOrEqual */
	"aByReference",		/* aByReference */
	"aCall",		/* aCall */
	"aCallVariable",	/* aCallVariable */
	"aCase",		/* aCase */
	"aCaseBody",		/* aCaseBody */
	"aChar",		/* aChar */
	"aChild",		/* aChild */
	"aChecked",		/* aChecked */
	"aClose",		/* aClose */
	"aCollection",		/* aCollection */
	"aColon",		/* aColon */
	"aCompile",		/* aCompile */
	"aConcatenate",		/* aConcatenate */
	"aConcatenateAssign",	/* aConcatenateAssign */
	"aCondition",		/* aCondition */
	"aConst",		/* aConst */
	"aDeallocate",		/* aDeallocate */
	"aDecreasing",		/* aDecreasing */
	"aDeferred",		/* aDeferred */
	"aDiv",			/* aDiv */
	"aDivEqual",		/* aDivEqual */
	"aDivideReal",		/* aDivideReal */
	"aElse",		/* aElse */
	"aElsif",		/* aElse */
	"aEndAsm",		/* aEndAsm */
	"aEndAliasCheck",	/* aEndAliasCheck */
	"aEndArrayIndexList",	/* aEndArrayIndexList */
	"aEndBegin",		/* aEndBegin */
	"aEndBind",		/* aEndBind */
	"aEndCase",		/* aEndCase */
	"aEndCaseBody",		/* aEndCaseBody */
	"aEndEnum",		/* aEndEnum */
	"aEndExport",		/* aEndExport */
	"aEndExpression",	/* aEndExpression */
	"aEndExpressionList",	/* aEndExpressionList */
	"aEndFor",		/* aEndFor */
	"aEndGet",		/* aEndGet */
	"aEndGrant",		/* aEndGrant */
	"aEndIf",		/* aEndIf */
	"aEndImport",		/* aEndImport */
	"aEndInit",		/* aEndInit */
	"aEndLoop",		/* aEndLoop */
	"aEndModule",		/* aEndModule */
	"aEndMonitor",		/* aEndMonitor */
	"aEndOpen",		/* aEndOpen */
	"aEndPut",		/* aEndPut */
	"aEndRead",		/* aEndRead */
	"aEndRecord",		/* aEndRecord */
	"aEndResult",		/* aEndResult */
	"aEndSubprogramBody",	/* aEndSubprogramBody */
	"aEndSubs",		/* aEndSubs */
	"aEndUnion",		/* aEndUnion */
	"aEndUnionLabelBody",	/* aEndUnionLabelBody */
	"aEndWrite",		/* aEndWrite */
	"aEnum",		/* aEnum */
	"aEqual",		/* aEqual */
	"aExit",		/* aExit */
	"aExitWhen",		/* aExitWhen */
	"aExponentiate",	/* aExponentiate */
	"aExponentiateEqual",	/* aExponentiateEqual */
	"aExport",		/* aExport */
	"aExternal",		/* aExternal */
	"aExternalAddress",	/* aExternalAddress */
	"aFalse",		/* aFalse */
	"aField",		/* aField */
	"aFor",			/* aFor */
	"aFork",		/* aFork */
	"aForkAddress",		/* aForkAddress */
	"aForkStackSize",	/* aForkStackSize */
	"aForkStatus",		/* aForkStatus */
	"aForRange",		/* aForRange */
	"aForward",		/* aForward */
	"aFree",		/* aFree */
	"aFunction",		/* aFunction */
	"aGet",			/* aGet */
	"aGrant",		/* aGrant */
	"aGreater",		/* aGreater */
	"aGreaterEqual",	/* aGreaterEqual */
	"aHandler",		/* aHandler */
	"aHash",		/* aHash */
	"aIf",			/* aIf */
	"aImply",		/* aImply */
	"aImport",		/* aImport */
	"aIn",			/* aIn */
	"aInfixAnd",		/* aInfixAnd */
	"aInfixBooleanCompare",	/* aInfixBooleanCompare */
	"aInfixCompare",	/* aInfixCompare */
	"aInfixImply",		/* aInfixImply */
	"aInfixOr",		/* aInfixOr */
	"aInit",		/* aInit */
	"aInt",			/* aInt */
	"aInterruptNumber",	/* aInterruptNumber */
	"aInvariant",		/* aInvariant */
	"aIs",			/* aIs */
	"aLabel",		/* aLabel */
	"aLess",		/* aLess */
	"aLessEqual",		/* aLessEqual */
	"aLogicalAnd",		/* aLogicalAnd */
	"aLogicalOr",		/* aLogicalOr */
	"aLogicalXor",		/* aLogicalXor */
	"aLoop",		/* aLoop */
	"aMax",			/* aMax */
	"aMin",			/* aMin */
	"aMinus",		/* aMinus */
	"aMinusEqual",		/* aMinusEqual */
	"aMissingStub",		/* aMissingStub */
	"aMod",			/* aMod */
	"aModEqual",		/* aModEqual */
	"aModule",		/* aModule */
	"aMonitor",		/* aMonitor */
	"aMonitorPriority",	/* aMonitorPriority */
	"aMultiply",		/* aMultiply */
	"aNat",			/* aNat */
	"aNew",			/* aNew */
	"aNil",			/* aNil */
	"aNoAlias",		/* aNoAlias */
	"aNoEnclosure",		/* aNoEnclosure */
	"aNonManifest",		/* aNonManifest */
	"aNonScalar",		/* aNonScalar */
	"aNot",			/* aNot */
	"aNotEqual",		/* aNotEqual */
	"aNotIn",		/* aNotIn */
	"aOpaque",		/* aOpaque */
	"aOpen",		/* aOpen */
	"aOr",			/* aOr */
	"aOrEqual",		/* aOrEqual */
	"aOtherwise",		/* aOtherwise */
	"aPacked",		/* aPacked */
	"aParent",		/* aParent */
	"aPause",		/* aPause */
	"aPervasive",		/* aPervasive */
	"aPlus",		/* aPlus */
	"aPlusEqual",		/* aPlusEqual */
	"aPointer",		/* aPointer */
	"aPost",		/* aPost */
	"aPre",			/* aPre */
	"aPriority",		/* aPriority */
	"aProcedure",		/* aProcedure */
	"aProcess",		/* aProcess */
	"aProcessStackSize",	/* aProcessStackSize */
	"aPut",			/* aPut */
	"aPutContinue",		/* aPutContinue */
	"aQuit",		/* aQuit */
	"aQuitReason",		/* aQuitReason */
	"aRangeCheck",		/* aRangeCheck */
	"aRangeCheck2",		/* aRangeCheck2 */
	"aRead",		/* aRead */
	"aReadWriteSize",	/* aReadWriteSize */
	"aReadWriteSizeResult",	/* aReadWriteSizeResult */
	"aReadWriteStatus",	/* aReadWriteStatus */
	"aReal",		/* aReal */
	"aRealDivEqual",	/* aRealDivEqual */
	"aRecord",		/* aRecord */
	"aRecordElementType",	/* aRecordElementType */
	"aRegister",		/* aRegister */
	"aResult",		/* aResult */
	"aReturn",		/* aReturn */
	"aSeek",		/* aSeek */
	"aSet",			/* aSet */
	"aSetDifference",	/* aSetDifference */
	"aSetDifferenceAssign",	/* aSetDifferenceAssign */
	"aSetGreaterEqual",	/* aSetGreaterEqual */
	"aSetIntersection",	/* aSetIntersection */
	"aSetIntersectionAssign",/* aSetIntersectionAssign */
	"aSetLessEqual",	/* aSetLessEqual */
	"aSetUnion",		/* aSetUnion */
	"aSetUnionAssign",	/* aSetUnionAssign */
	"aSetXor",		/* aSetXor */
	"aSetXorAssign",	/* aSetXorAssign */
	"aShiftLeft",		/* aShiftLeft */
	"aShiftLeftEqual",	/* aShiftLeftEqual */
	"aShiftRight",		/* aShiftRight */
	"aShiftRightEqual",	/* aShiftRightEqual */
	"aSignal",		/* aSignal */
	"aSkip",		/* aSkip */
	"aStar",		/* aStar */
	"aStarEqual",		/* aStarEqual */
	"aStorageSize",		/* aStorageSize */
	"aStreamNumber",	/* aStreamNumber */
	"aString",		/* aString */
	"aStringSizeBound",	/* aStringSizeBound */
	"aStub",		/* aStub */
	"aSubrange",		/* aSubrange */
	"aSubs",		/* aSubs */
	"aSubstring",		/* aSubstring */
	"aSubtract",		/* aSubtract */
	"aTag",			/* aTag */
	"aTagCheck",		/* aTagCheck */
	"aTell",		/* aTell */
	"aTimeout",		/* aTimeout */
	"aTrue",		/* aTrue */
	"aType",		/* aType */
	"aTypeCheat",		/* aTypeCheat */
	"aTypeCheatSize",	/* aTypeCheatSize */
	"aUnchecked",		/* aUnchecked */
	"aUninitialize",	/* aUninitialize */
	"aUnion",		/* aUnion */
	"aUnionLabelBody",	/* aUnionLabelBody */
	"aUnqualified",		/* aUnqualified */
	"aVar",			/* aVar */
	"aVarInit",		/* aVarInit */
	"aVaryingParameter",	/* aVaryingParameter */
	"aWait",		/* aWait */
	"aWaitPriorityOrTimeout",/* aWaitPriorityOrTimeout */
	"aWrite",		/* aWrite */
	"aXor",			/* aXor */
	"aXorEqual",		/* aXorEqual */
	"aCheckedStmt",
	"aUncheckedStmt",
	"#251",
	"aFileName",		/* aFileName */
	"aNewLine",		/* aNewLine */
	"aNewFile",		/* aNewFile */
	"aEndOfFile")		/* aEndOfFile */
