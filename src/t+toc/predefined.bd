% Turing+ v6.2, Sept 2022
% Copyright 1986 University of Toronto, 2022 Queen's University at Kingston
% 
% Permission is hereby granted, free of charge, to any person obtaining a copy of this software
% and associated documentation files (the “Software”), to deal in the Software without restriction,
% including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
% and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
% subject to the following conditions:
% 
% The above copyright notice and this permission notice shall be included in all copies
% or substantial portions of the Software.
% 
% THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
% INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
% AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
% DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

/*
 * Predefined Routine Module
 */
body "predefined.st"  module Predefined

    const *predefinedTypes : array 
	firstPredefinedRoutine..lastLibraryPredefinedRoutine of TypeKinds :=
	  init (
	    tReal,		/* pAbs */
	    tAddressInt,	/* pAddr */
	    tReal,		/* pArctan */
	    tReal,		/* pArctand */
	    tInt,		/* pCeil */
	    tChar,		/* pChr */
	    tReal,		/* pCos */
	    tReal,		/* pCosd */
	    tBoolean,		/* pEmpty */
	    tBoolean,		/* pEof */
	    tString,		/* pErealstr */
	    tReal,		/* pExp */
	    tInt,		/* pFloor */
	    tString,		/* pFrealstr */
	    tNat,		/* pGetpriority */
	    tInt,		/* pIndex */
	    tReal,		/* pIntreal */
	    tString,		/* pIntstr */
	    tInt,		/* pLength */
	    tReal,		/* pLn */
	    tInt,		/* pLower */
	    tReal,		/* pMax */
	    tReal,		/* pMin */
	    tReal,		/* pNatreal */
	    tString,		/* pNatstr */
	    tInt,		/* pNil */
	    tInt,		/* pOrd */
	    tInt,		/* pPred */
	    tNoType,		/* pRand */
	    tNoType,		/* pRandInt */
	    tNoType,		/* pRandNext */
	    tNoType,		/* pRandSeed */
	    tNoType,		/* pRandomize */
	    tString,		/* pRealstr */
	    tString,		/* pRepeat */
	    tInt,		/* pRound */
	    tNoType,		/* pSetpriority */
	    tInt,		/* pSign */
	    tReal,		/* pSin */
	    tReal,		/* pSind */
	    tInt,		/* pSize */
	    tReal,		/* pSqrt */
	    tInt,		/* pStrint */
	    tNat,		/* pStrnat */
	    tNoType,		/* pStrdelete */
	    tNoType,		/* pStrmove */
	    tReal,		/* pStrreal */
	    tNoType,		/* pStrreplace */
	    tInt,		/* pSucc */
	    tInt,		/* pUpper */

	    tNoType,		/* pAllocate */
	    tNoType,		/* pPause */
	    tNoType,		/* pClose */
	    tNoType,		/* pConditionInitialize */
	    tNoType,		/* pDeallocate */
	    tNoType,		/* pDeferredConditionInitialize */
	    tNoType,		/* pDeferredSignal */
	    tNoType,		/* pDeferredWait */
	    tNoType,		/* pEnterDeviceMonitor */
	    tNoType,		/* pEnterMonitor */
	    tNoType,		/* pExitHandler */
	    tNoType,		/* pExitDeviceMonitor */
	    tNoType,		/* pExitMonitor */
	    tNoType,		/* pFree */
	    tNoType,		/* pGetCharString */
	    tNoType,		/* pGetCharSubrange */
	    tNoType,		/* pGetInt */
	    tNoType,		/* pGetNat */
	    tNoType,		/* pGetReal */
	    tNoType,		/* pGetSkip */
	    tNoType,		/* pGetString */
	    tNoType,		/* pGetStringStar */
	    tNoType,		/* pGetSubrange */
	    tNoType,		/* pGetWord */
	    tNoType,		/* pHandler */
	    tNoType,		/* pInitializeDeviceMonitor */
	    tNoType,		/* pInitializeMonitor */
	    tNoType,		/* pLoopTimeSlice */
	    tNoType,		/* pConvertCharStringToString */
	    tNoType,		/* pNew */
	    tNoType,		/* pOpen */
	    tNoType,		/* pOpenArg */
	    tNoType,		/* pOpenFile */
	    tInt,		/* pPowerii */
	    tReal,		/* pPowerri */
	    tReal,		/* pPowerrr */
	    tNoType,		/* pPriorityConditionInitialize */
	    tNoType,		/* pPrioritySignal */
	    tNoType,		/* pPriorityWait */
	    tNoType,		/* pPutChar */
	    tNoType,		/* pPutInt */
	    tNoType,		/* pPutNat */
	    tNoType,		/* pPutReal */
	    tNoType,		/* pPutFReal */
	    tNoType,		/* pPutEReal */
	    tNoType,		/* pPutSkip */
	    tNoType,		/* pPutString */
	    tNoType,		/* pQuit */
	    tNoType,		/* pRead */
	    tNoType,		/* pReadWithResult */
	    tNoType,		/* pRoutineTimeSlice */
	    tNoType,		/* pSeek */
	    tNoType,		/* pSeekToEnd */
	    tNoType,		/* pSetStream */
	    tNoType,		/* pSetStreamAndStatus */
	    tNoType,		/* pSignal */
	    tNoType,		/* pStartProcess */
	    tNoType,		/* pStrmoveSS */
	    tNoType,		/* pStrmoveSC */
	    tNoType,		/* pStrmoveCS */
	    tNoType,		/* pStrmoveCC */
	    tNoType,		/* pStrreplaceS */
	    tNoType,		/* pStrreplaceC */
	    tString,		/* pSubstringExpn */
	    tString,		/* pSubstringStar */
	    tString,		/* pSubstringExpnExpn */
	    tString,		/* pSubstringExpnStar */
	    tString,		/* pSubstringStarExpn */
	    tString,		/* pSubstringStarStar */
	    tChar,		/* pSubstringCharExpn */
	    tChar,		/* pSubstringCharStar */
	    tString,		/* pSubstringCharExpnExpn */
	    tString,		/* pSubstringCharExpnStar */
	    tString,		/* pSubstringCharStarExpn */
	    tString,		/* pSubstringCharStarStar */
	    tNoType,		/* pTell */
	    tNoType,		/* pTimeOutConditionInitialize */
	    tNoType,		/* pTimeOutSignal */
	    tNoType,		/* pTimeOutWait */
	    tNoType,		/* pWait */
	    tNoType,		/* pWrite */
	    tNoType,		/* pWriteWithResult */
	    tNoType,		/* pSetStdInputStream */
	    tNoType)		/* pSetStdOutputStream */


    body function ResultType % (predef : int) : TypeKinds
	if predef > lastLibraryPredefinedRoutine then
	    result tInt
	else
	    result predefinedTypes(predef)
	end if
    end ResultType

end Predefined
