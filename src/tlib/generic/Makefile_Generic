# Parameters to this Makefile
SYS=UNIX64
DESTDIR=../../usr/local/lib/tplus

#
# object files to be made in this directory
#
TLOBJS= TLdata.obj
TLAOBJS=TLAVRS.obj
TLBOBJS=none
TLCOBJS=none
TLEOBJS=TLETR.obj
TLIOBJS=TLIZ.obj TLIZC.obj
TLMOBJS=none
TLSOBJS=none
TLXOBJS=TLX.obj

OBJS=   main.obj $(TLOBJS) \
	$(TLAOBJS) $(TLBOBJS) $(TLCOBJS) $(TLEOBJS) \
	$(TLIOBJS) $(TLMOBJS) $(TLSOBJS) $(TLXOBJS)


#----------
# global definitions for making TL (and TLA, TLB, TLC, ...)
#----------
 
TPC= tpc 
CC= cc -w 

#
# include directory - if default is not to be used
#
INCLUDE_DIR=/usr/local/include/tplus
#INCLUDEDIR=-i $(INCLUDE_DIR)
INCLUDEDIR=
#LIBDIR=-L /homes/turing/d0/turing/src/tplus/tlib/lib
LIBDIR=
 
#
# IEEE   - needed in TLA
#
DEFINES=-DIEEE -D$(SYS)
TXFLAGS=
TFLAGS= -m$(SYS) $(DEFINES) $(INCLUDEDIR) $(LIBDIR) $(TXFLAGS)
CFLAGS=	$(ARCH) $(DEFINES) -I$(INCLUDE_DIR)

LN=	ln -s

MAKE=	make
MKFLAGS=$(MFLAGS) -f Makefile

SHELL=	/bin/sh


#.KEEP_STATE:


.SUFFIXES:
.SUFFIXES:	.obj .ch .bd .c .s

.s.bd .s.ch .s.c .c.bd .c.ch:
	@rm -f $<

.c.obj .s.obj:
	@rm -f $*.obj
#ifdef CHECKED
	@echo $(CC) -c -O -DCHECKED $(CFLAGS) $<
	@cd checked && $(CC) -c -O -DCHECKED $(CFLAGS) ../$<
#endif CHECKED
#ifdef UNCHECKED
	@echo $(CC) -c -O $(CFLAGS) $<
	@cd unchecked && $(CC) -c -O $(CFLAGS) ../$<
#endif UNCHECKED
	@touch $*.obj

.bd.obj .ch.obj:
	@rm -f $*.obj
#ifdef CHECKED
	@echo $(TPC) -cO -C -DCHECKED $(TFLAGS) $<
	@cd checked && $(TPC) -cO -C -DCHECKED $(TFLAGS) ../$<
#endif CHECKED
#ifdef UNCHECKED
	@echo $(TPC) -cO -C $(TFLAGS) $<
	@cd unchecked && $(TPC) -cO -C $(TFLAGS) ../$<
#endif UNCHECKED
	@touch $*.obj


all:		date DIRs LINKs $(OBJS) TLK.a TL.a LIBs


date:
	@echo ""; date; echo ""

#ifdef CHECKED
DIRs:		checked
LIBs:		tlib$(SYS).a
#endif CHECKED
#ifdef UNCHECKED
DIRs:		unchecked
LIBs:		tlib$(SYS)u.a
#endif UNCHECKED


checked unchecked:
	@-mkdir $@


none:
	@touch none


TL=	../TL
TL=	TL

LINKs:		$(TL) $(TL)/READY

$(TL) $(TL)/READY:
	@mkdir TL TL/TLA TL/TLB TL/TLC TL/TLE TL/TLI TL/TLK TL/TLM TL/TLS TL/TLX
	@cd TL/TLA && $(LN) ../../../TL/TLA/Make* ../../../TL/TLA/TL*.* .
	@cd TL/TLB && $(LN) ../../../TL/TLB/Make* ../../../TL/TLB/TL*.* .
	@cd TL/TLC && $(LN) ../../../TL/TLC/Make* ../../../TL/TLC/TL*.* .
	@cd TL/TLE && $(LN) ../../../TL/TLE/Make* ../../../TL/TLE/TL*.* .
	@cd TL/TLI && $(LN) ../../../TL/TLI/Make* ../../../TL/TLI/TL*.* .
	@cd TL/TLK && $(LN) ../../../TL/TLK/TLK.st .
	@cd TL/TLM && $(LN) ../../../TL/TLM/Make* ../../../TL/TLM/TL*.* .
	@cd TL/TLS && $(LN) ../../../TL/TLS/Make* ../../../TL/TLS/TL*.* .
	@cd TL/TLX && $(LN) ../../../TL/TLX/TLX.st .
	@cd TL && $(LN) ../../TL/Make* ../../TL/TL*.* .
	@touch TL/READY


$(TLAOBJS):	$(TL)/TLA/TLA.def $(TL)/TLA/TLA.var
$(TLBOBJS):	$(TL)/TLB/TLB.def $(TL)/TLB/TLB.var
$(TLCOBJS):	$(TL)/TLC/TLC.def $(TL)/TLC/TLC.var
$(TLEOBJS):	$(TL)/TLE/TLE.def $(TL)/TLE/TLE.var
$(TLIOBJS):	$(TL)/TLI/TLI.def $(TL)/TLI/TLI.var
$(TLMOBJS):	$(TL)/TLM/TLM.def $(TL)/TLM/TLM.var
$(TLSOBJS):	$(TL)/TLS/TLS.def $(TL)/TLS/TLS.var


DEFS=	TPC='$(TPC)' TFLAGS='$(TFLAGS)' CFLAGS='$(CFLAGS)'

TL.a TLA.a TLB.a TLC.a TLE.a TLI.a TLM.a TLS.a:
	@cd $(TL) && $(MAKE) Makefile > /dev/null
	@cd $(TL) && $(MAKE) $(MKFLAGS) $(DEFS) $@

TLK.a:
	@cd TLK && $(MAKE) Makefile > /dev/null
	@cd TLK && $(MAKE) $(MKFLAGS) $(DEFS) $@


#ifdef CHECKED
tlib$(SYS).a:	$(OBJS) $(TL)/TLc.a TLK/TLK.a
	@echo 'Creating machine-dependent checked library'
	@rm -fr $@ TLc.a
	@-cp $(TL)/TLc.a TLc.a
	@-cd checked && ar cr ../TLc.a *.o
	@-mv -f TLc.a $@
#endif CHECKED

#ifdef UNCHECKED
tlib$(SYS)u.a:	$(OBJS) $(TL)/TLu.a TLK/TLK.a
	@echo 'Creating machine-dependent unchecked library'
	@rm -fr $@ TLu.a
	@-cp $(TL)/TLu.a TLu.a
	@-cd unchecked && ar cr ../TLu.a *.o
	@-mv -f TLu.a $@
#endif UNCHECKED

# So "make -n" doesn't get confused:
$(TL)/TLc.a $(TL)/TLu.a TLK/TLK.a:


#ifndef Makefile
Make.c:		Makefile
	@sed -e '/^#ifndef CHECKED/,/^#endif CHECKED/d' \
	    -e '/^#ifdef UNCHECKED/,/^#endif UNCHECKED/d' \
	    -e '/^#ifndef Makefile/,/^#endif Makefile/d' \
	    -e '/^#/d' -e 's/Makefile/$@/g' Makefile > $@

Make.u:		Makefile
	@sed -e '/^#ifdef CHECKED/,/^#endif CHECKED/d' \
	    -e '/^#ifndef UNCHECKED/,/^#endif UNCHECKED/d' \
	    -e '/^#ifndef Makefile/,/^#endif Makefile/d' \
	    -e '/^#/d' -e 's/Makefile/$@/g' Makefile > $@
#endif Makefile


install:	all
#ifdef CHECKED
	cp tlib$(SYS).a $(DESTDIR)/tlib$(SYS).a
	-ranlib $(DESTDIR)/tlib$(SYS).a
#endif CHECKED
#ifdef UNCHECKED
	cp tlib$(SYS)u.a $(DESTDIR)/tlib$(SYS)u.a
	-ranlib $(DESTDIR)/tlib$(SYS)u.a
#endif UNCHECKED


clean:
	@-cd $(TL) && $(MAKE) $(MFLAGS) $@
	@cd TLK && $(MAKE) $(MFLAGS) $@
	rm -f $(OBJS)
	rm -fr checked unchecked TL
	rm -f tlib*.a tlib*u.a *.o
	rm -f core err errs make.err make.log make.out
	rm -f Make.c Make.u .make.state
