% Turing+ v6.2, Sept 2022
% Copyright 1986 University of Toronto, 2022 Queen's University at Kingston
% 
% Permission is hereby granted, free of charge, to any person obtaining a copy of this software
% and associated documentation files (the “Software”), to deal in the Software without restriction,
% including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
% and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
% subject to the following conditions:
%
% The above copyright notice and this permission notice shall be included in all copies
% or substantial portions of the Software.
%
% THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
% INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
% AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
% DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

%
% Collection pointer structures.
%
type *Timestamp		: int4

const *FirstTimestamp	: Timestamp	:= -2000000000
const *LastTimestamp	: Timestamp	:= -1000000000

type *CheckedPointer :
    record
	objAddress	: addressint
	timestamp	: Timestamp
    end record

/*
 * Format of an uninitialization directive:
 *		1111110000000000
 *		5432109876543210
 *		CCCCCCCCOOOOOOcc
 *	where:
 *		cc is the count type
 *		OO is the opcode
 *		CC is the (possible) count
 */
type *CountTypeBits:	0..1
type *OpcodeBits:	2..7
type *CountByteBits:	8..15

type *OpcodeType : int2

/* control opcodes */
const *Skip	:= 0
const *Begin	:= 1
const *End	:= 2
const *Repeat	:= 3
const *Call	:= 4

/* uninitialization opcodes -- put after control for easy upgrades */
const *UInt	:= 10
const *UNat	:= 11
const *UReal	:= 12
const *UBoolean	:= 13
const *USet	:= 14
const *UString	:= 15
const *UPointer	:= 16

const *CountNull	:= 0	/* no count given */
const *CountLong	:= 1	/* count is in next 2 words (high; low) */
const *CountWord	:= 2	/* count is in next word */
const *CountByte	:= 3	/* count is in opcode byte */

const *UninitPointerValue : nat4 := 16#FFFFFFFF
