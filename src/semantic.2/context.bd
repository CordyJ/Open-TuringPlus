% Turing+ v6.2, Sept 2022
% Copyright 1986 University of Toronto, 2022 Queen's University at Kingston
% 
% Permission is hereby granted, free of charge, to any person obtaining a copy of this software
% and associated documentation files (the “Software”), to deal in the Software without restriction,
% including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
% and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
% subject to the following conditions:
% 
% The above copyright notice and this permission notice shall be included in all copies
% or substantial portions of the Software.
% 
% THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
% INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
% AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
% DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

body "context.st" module Context

    /*
     *   File:	Turing Plus Semantic Pass 1 Context Mechanism V1.00
     *   Author:	M. Mendell
     *   Date:	13 March 1986
     */

    /*
     * This mechanism is used to keep track of a set of flags, for use in
     * the S/SL
     */

    var contextArray : array firstContext .. lastContext of boolean

    body function ContextChoose % (i : firstContext .. lastContext) : boolean
	result contextArray(i)
    end ContextChoose

    body procedure ContextSet % (i : firstContext .. lastContext)
	contextArray(i) := true
    end ContextSet

    body procedure ContextClear % (i : firstContext .. lastContext)
	contextArray(i) := false
    end ContextClear

    body procedure DumpContext
	const contextNames : array firstContext .. lastContext of string(15)
	    := init ("Compile", "Function", "Register", "Packed", "Opaque",
		     "Flex", "String Expn", "Pervasive", "In Handler")
	put "Contexts:\t"
	for i : firstContext .. lastContext
	    if contextArray(i) then
		put contextNames(i), " " ..
	    end if
	end for
	put "\n\n", repeat("-", 79)
    end DumpContext

    /* initialize all the contexts to false */
    for i : firstContext .. lastContext
	contextArray(i) := false
    end for

end Context
