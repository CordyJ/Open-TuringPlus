% Turing+ v6.2, Sept 2022
% Copyright 1986 University of Toronto, 2022 Queen's University at Kingston
% 
% Permission is hereby granted, free of charge, to any person obtaining a copy of this software
% and associated documentation files (the “Software”), to deal in the Software without restriction,
% including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
% and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
% subject to the following conditions:
%
% The above copyright notice and this permission notice shall be included in all copies
% or substantial portions of the Software.
%
% THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
% INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
% AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
% DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

label oTypePushBuiltIn :
    Types.PushBuiltInType (parameterValue)

label oTypePushNew :
    Types.PushNewType (parameterValue)

label oTypePushComponentType :
    Types.PushComponentType

label oTypePushResultType :
    Types.PushResultType

label oTypePushSymbolType :
    Types.PushType (Symbol.SymbolType)

label oTypeReplaceBuiltIn :
    Types.ReplaceBuiltInType (parameterValue)

label oTypeReplaceComponentType :
    Types.ReplaceComponentType

label oTypeReplaceResultType :
    Types.ReplaceResultType

label oTypeEnterSymbol :
    Types.TypEnterSymbol (Symbol.SymbolIndexx)

label oTypeEnterFieldsScope :
    Types.EnterFields (Scope.SavedScopeIndex)

label oTypeEnterGrantScope :
    Types.EnterGrant (Scope.SavedScopeIndex)

label oTypeEnterFormalsScope :
    Types.EnterFormals (Scope.SavedScopeIndex)

label oTypeEnterImportsScope :
    Types.EnterImports (Scope.SavedScopeIndex)

label oTypeEnterLeftComponentType :
    Types.EnterLeftComponentType

label oTypeEnterLeftResultType :
    Types.EnterLeftResultType

label oTypeEnterLeftRootType :
    Types.EnterLeftRootType

label oTypeEnterAttribute :
    Types.TypEnterAttribute (parameterValue)

label oTypeEnterKind :
    Types.TypEnterKind (parameterValue)

label oTypeClearAttribute :
    Types.TypClearAttribute (parameterValue)

label oTypePop :
    Types.PopType

label oTypePopAndChooseKind :
    resultValue := Types.TypeKind
    Types.PopType

label oTypeChooseKind :
    resultValue := Types.TypeKind

label oTypeChooseLeftKind :
    resultValue := Types.LeftTypeKind

label oTypeChooseAttribute :
    if Types.TypeHasAttribute (parameterValue) then
	resultValue := trueResult
    else
	resultValue := falseResult
    end if

label oTypeCopy :
    Types.PushType(Types.TypeIndexx)

label oTypeCopyLeftType :
    Types.CopyLeftType

label oTypeSwapTypes :
    Types.SwapTypes
