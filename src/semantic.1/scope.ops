% Turing+ v6.2, Sept 2022
% Copyright 1986 University of Toronto, 2022 Queen's University at Kingston
% 
% Permission is hereby granted, free of charge, to any person obtaining a copy of this software
% and associated documentation files (the “Software”), to deal in the Software without restriction,
% including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
% and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
% subject to the following conditions:
%
% The above copyright notice and this permission notice shall be included in all copies
% or substantial portions of the Software.
%
% THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
% INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
% AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
% DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

label oScopePush :
    Scope.PushNewScope

label oScopePushCopyScope :
    Scope.PushCopyScope

label oScopePushTypeFormals :
    Scope.PushScope (Types.TypeFormals)

label oScopePushTypeImports :
    Scope.PushScope (Types.TypeImports)

label oScopePushTypeExports :
    Scope.PushScope (Types.TypeExports)

label oScopePushTypeFields :
    Scope.PushScope (Types.TypeFields)

label oScopePushTypeGrants :
    Scope.PushScope (Types.TypeGrant)

label oScopePushResultSymbolScope :
    Scope.PushScope (Symbol.ResultSymbolScope)

label oScopePop :
    Scope.PopScope

label oScopeEnterSymbol :
    Scope.ScoEnterSymbol(Symbol.SymbolIdent, Symbol.SymbolKind,
			 Symbol.SymbolIndexx)

label oScopeAutoImportEnterSymbol :
    Scope.EnterAutoImportSymbol(Symbol.SymbolIdent, Symbol.SymbolKind,
				Symbol.SymbolIndexx)

label oScopeReplaceCountSymbol :
    Scope.ReplaceCountSymbol (Count.CountValue, Symbol.SymbolIdent,
	Symbol.SymbolKind, Symbol.SymbolIndexx)

label oScopeClose :
    Scope.CloseScope

label oScopeSave :
    Scope.SaveScope

label oScopeMergeScopes :
    Scope.MergeScopes

label oScopeStrip :
    Scope.StripScope

label oScopeChooseContainsSymbolIdent :
    if Scope.ScopeContainsSymbolIdent (Symbol.SymbolIdent) then
	resultValue := trueResult
    else
 	resultValue := falseResult
    end if

label oScopeChooseContainsSymbol :
    if Scope.ScopeContainsSymbol (Symbol.SymbolIndexx) then
	resultValue := trueResult
    else
 	resultValue := falseResult
    end if
